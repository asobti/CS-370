--- drivers/hid/usbhid/hid-core.c
+++ drivers/hid/usbhid/hid-core.c
@@ -43,6 +43,10 @@
 #define DRIVER_DESC "USB HID core driver"
 #define DRIVER_LICENSE "GPL"
 
+#ifdef	CONFIG_KDB_USB
+#include <linux/kdb.h>
+#endif
+
 static char *hid_types[] = {"Device", "Pointer", "Mouse", "Device", "Joystick",
 				"Gamepad", "Keyboard", "Keypad", "Multi-Axis Controller"};
 /*
@@ -948,6 +952,12 @@
 
 	usbhid = hid->driver_data;
 
+#ifdef CONFIG_KDB_USB
+	/* Unlink the KDB USB struct */
+	if (usbhid->urbin == kdb_usb_infos.urb)
+		memset(&kdb_usb_infos, 0, sizeof(kdb_usb_infos));
+#endif
+
 	spin_lock_irq(&usbhid->inlock);	/* Sync with error handler */
 	usb_set_intfdata(intf, NULL);
 	spin_unlock_irq(&usbhid->inlock);
@@ -1033,6 +1043,16 @@
 	printk(": USB HID v%x.%02x %s [%s] on %s\n",
 		hid->version >> 8, hid->version & 0xff, c, hid->name, path);
 
+#ifdef	CONFIG_KDB_USB
+	/* Initialization of the KDB structure */
+	if (!strcmp(c, "Keyboard")) {
+		struct usbhid_device *usbhid = hid->driver_data;
+		kdb_usb_infos.urb = usbhid->urbin;
+		kdb_usb_infos.buffer = usbhid->inbuf;
+		kdb_usb_infos.reset_timer = NULL;
+	}
+#endif
+
 	return 0;
 }
 
